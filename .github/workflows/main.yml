name: Get RunPod GPU Locations with API Key and Save to Repo

on:
  workflow_dispatch: # Allows you to manually trigger the workflow from the GitHub UI

jobs:
  get-gpu-data:
    runs-on: ubuntu-latest # Specifies the operating system for the job
    permissions:
      contents: write # חובה: הרשאת כתיבה לתוכן הריפוזיטורי

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Run Python script to get GPU locations
      env:
        # העברת ה-API Key מ-Repository Secrets כמשתנה סביבה לסקריפט הפייתון
        RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
      run: python get_runpod_gpus.py > runpod_gpu_locations.txt

    - name: Commit and Push GPU locations to repository
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add runpod_gpu_locations.txt
        git commit -m "Update RunPod GPU locations" || echo "No changes to commit"
        # שימוש ב-GH_PAT לביצוע ה-push.
        # חשוב לוודא של-GH_PAT יש הרשאת 'repo' (או 'contents:write' אם היא יותר ספציפית).
        git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git HEAD:main # או HEAD:<your-branch-name>
      # הערה: אם ה-repo שלך הוא private, ייתכן ש-GITHUB_TOKEN לא מספיק.
      # שימוש ב-GH_PAT שאתה יצרת ודחפת יאפשר יותר שליטה.
      # עבור ריפוז פרטיים, לפעמים זה עדיף. עבור ריפוז ציבוריים, ה-GITHUB_TOKEN לעיתים קרובות מספיק עם permissions: contents: write.
